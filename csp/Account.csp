<!DOCTYPE html>
<html>
<head>
<script language="Cache" runat="Server">
Set tHeader = "Riches - Account"
Merge pRequestData = %request.Data
Set tSC = ##class(Riches.RequestData).LogRequest(.pRequestData,"Account.csp")
// Check tSC to avoid duplicate submissions
If $$$ISOK(tSC) {
	//Set tSC = ##class(Riches.Transact).SubmitFormData(.pRequestData,.pAction,.pId)

Set tClassname = "Riches.Account"
If ($Data(%request.Data("iType",1))) {
	Set iType = %request.Data("iType",1)
}
If ($Data(%request.Data("iNickname",1))) {
	Set iNickname = %request.Data("iNickname",1)
}
If ($Data(%request.Data("iStartBalance",1))) {
	Set iStartBalance = %request.Data("iStartBalance",1)
	If (iStartBalance = "") Set iStartBalance = 0
}
If ($Get(iNickname) '= "") {
	Set objAccount = ##class(Riches.Account).%New()
	Set objAccount.Nickname = iNickname
	Set objAccount.StartBalance = $Get(iStartBalance)
	Set objAccount.Type = $Get(iType)
	/*
	Set tSC = objAccount.%Save()
	Set ^TESTunit(0-$Increment(^TESTunit)) = $SYSTEM.Status.GetOneErrorText(tSC)
	*/
	//Merge pRequestData = %request.Data
	Set tSC = $CLASSMETHOD(tClassname,"SubmitFormData",.pRequestData,.pAction,.pLogicalDisplay)

	If (tSC = 1) {
		Set iNickname = ""
		Set iStartBalance = ""
	}
}
If ($Data(%request.Data("debug",1))) {
	Set iDebug = %request.Data("debug",1)
	//If (iDebug = "RESET") Kill ^RichesDEBUG
	//Do ##class(Riches.Util).OutputDebug($Get(iTable,iDebug))
}
}
If ($Data(%request.Data("iAccount",1))) {
	Set iAccount = %request.Data("iAccount",1)
}
If ($Data(%request.Data("iTable",1))) {
	Set iTable = %request.Data("iTable",1)
}
Set tOnLoadColumnCount = 13
For ii = 1:1:tOnLoadColumnCount {
	Set tColSel = $Get(tColSel) _ ","
}
</script>
<script language="JavaScript">
function goClickButton(id)
{
	var iTable = document.getElementById("iTable").value;
	var iAccount = document.getElementById("iAccount").value;
	document.location = "Account.csp?debug=" + id + "&iTable=" + iTable + "&iAccount=" + iAccount;
}
function goClickLine(row)
{
	var rowId = "tr_" + row;
	var x = document.getElementById("hidden_col_sel").value;
	var arr = x.split(",");
	var len = arr.length;
	var columns = "";
	var values = "";
	for (var i = 0; i < len; i++) {
		if (arr[i] != "") {
			columns += "," + arr[i]
			x = document.getElementById("div_" + row + "_" + (i+1)).innerHTML;
			values += ",'" + x + "'";
		}
	}
	var table = document.getElementById("iTable").value;
	var col = columns.substring(1);  // skip leading comma
	var val = values.substring(1);  // skip leading comma
	var sql = "Insert into " + table + " (" + col + ") values (" + val + ")";
	postSQL(sql);
	document.getElementById(rowId).style.display = "none";
}
function onchangeSel(id)  // id is this of <select> for column selection
{
	var arr = id.id.split("sel_");
	var y = arr[1] - 1;  // which position changes
	var x = document.getElementById("hidden_col_sel").value;
	var arr = x.split(",");
	var len = arr.length;
	var x = document.getElementById(id.id).value;  // selected column
	arr[y] = x;
	y = arr[0];
	for (var i = 1; i < len; i++) {
		y += "," + arr[i];
	}
	document.getElementById("hidden_col_sel").value = y;  // comma delimited list of selected columns
}
function onchangeTable(id)  // id is this.value - Riches.Transact
{
	if (document.getElementById("div_col_count") == null) {
		var x = 0;
	} else {
		var x = document.getElementById("div_col_count").innerHTML;
	}
	//var x = document.getElementById("sel_"+2).innerHTML;  // <option ... </option>
	//alert(id);
}
function onloadHandler()
{
	var iAccount = '#($Get(iAccount,""))#';
	document.getElementById("iAccount").value = iAccount;
	if (document.getElementById("div_col_count") == null) {
		var x = 0;
	} else {
		var x = document.getElementById("div_col_count").innerHTML;
	}
	var y = "";
	for (var i = 2; i < x; i++) {
		y += ",";
	}
	document.getElementById("hidden_col_sel").value = y;
	if (document.getElementById("div_0_1") == null) {
		var x = "";
	} else {
		var x = document.getElementById("div_0_1").innerHTML;
		//if (x == "") {
			document.getElementById("div_0_1").innerHTML = document.getElementById("iChoose").value;
		//}
	}
	//var tAction = '#($Get(tAction,""))#';
	//var tLogicalDisplay = '#($Get(pLogicalDisplay,""))#';
	//if (tAction != '') {
	//	updateLogicalDisplay(tLogicalDisplay);
	//}
}
function postDebug(item, index) {
	var escape = item.replace(/\//g, '-');  // fix slashes in dates
	//var escape = encodeURI(escape);
	var escape = encodeURIComponent(escape);  // fix % and more
	if (item == '') escape = 'NULL';
	document.getElementById("div_debug").innerHTML += index + "," + escape + "<br>";
	var xhttp = new XMLHttpRequest();
	xhttp.onreadystatechange = function() {
		if (this.readyState == 4 && this.status == 200) {
			document.getElementById("div_debug").innerHTML += this.responseText;
		}
		if (this.readyState == 4 && this.status != 200) {
			document.getElementById("div_debug").innerHTML += this.responseText;
		}
	};
	//xhttp.open("GET", "/restapi/debug", true, "_SYSTEM", "SYS");
	xhttp.open("POST", "/restapi/debug/" + escape + '/' + index, true);
	//xhttp.open("POST", "/restapi/debug/" + escape + '/' + index, true, "_SYSTEM", "SYS");
	xhttp.send();
}
function postSQL(query)
{
	var xhttp = new XMLHttpRequest();
	xhttp.onreadystatechange = function() {
		if (this.readyState == 4 && this.status == 200) {
			document.getElementById("div_debug").innerHTML += this.responseText;
		}
	};
	xhttp.open("POST", "/restapi/sql/" + query, true);
	xhttp.send();
}
function processFile(id)
{
	var delim = '\n';
	var arr = id.split(delim);
	arr.forEach(postDebug);

	//window.location = 'Account.csp?debug='+id;
	//document.getElementById("iframe_debug").src = 'Chooser.csp?iChoose=debug';
	//document.getElementById("iframe_debug").src = '';

}
function fileOnChange(id)
{
	var fileUploader = document.getElementById('file-uploader');
	//alert(fileUploader.files);
	// Loop through the files and get metadata
  		var file = fileUploader.files[0]; 
    	var name = file.name;
    	var type = file.type ? file.type: 'NA';
    	var size = file.size;
    	var lastModified = file.lastModified;
	    alert( file + name + type + size + lastModified );
}
function showFile(input)
{
	var file = input.files[0];
	var reader = new FileReader();
	reader.onload = function() {
		//document.getElementById('debug').value = reader.result;
		processFile(reader.result);
  	};
	reader.onerror = function() {
		document.getElementById('debug').value = reader.error;
		alert(reader.error);
	}
	reader.readAsText(file);
}
function tableClickHandler(id)
{
	//alert(id);
	updateLogicalDisplay(id);
}
function updateLogicalDisplay(id)
{
	var delim = '^';
	var arr = id.split(delim);
	var tDisplay = 'iNickname';
	var tLogical = 'iAccount';
	var tElement = '#($Get(tElement,""))#';
	parent.document.getElementById(tLogical).value = arr[1];
	parent.document.getElementById(tDisplay).value = arr[2];
	//if (tElement == 'Account') {
	//	parent.document.getElementById("iframe_ledger").src = 'Ledger.csp?iAccount=' + arr[1];
	//}
}
</script>

<title>#(tHeader)#</title>
</head>

<body onload="onloadHandler();">
<h1>#(tHeader)#</h1>
<form action="" method="post" enctype="multipart/form-data">
<table border="1"><tr><td>
<script language="Cache" runat="Server">
Set tSC = ##class(Riches.Account).OutputFormData()
</script>
</td></tr>
<tr><td>
<label for="file-uploader">CSV file:</label>
<input type="file" name="file-uploader" id="file-uploader" onchange="showFile(this)"><br>
</td></tr></table>
<script language="Cache" runat="Server">
Set tSC = ##class(Riches.Util).OutputSelectTable("iTable","iTable","Insert into table:",$Get(iTable))
/*
<label for="iTable">Insert into table:</label>

<select name="iTable" id="iTable" onchange="onchangeTable(this.value)">
  <option value="Riches.Category">Category</option>
  <option value="Riches.Merchant">Merchant</option>
  <option value="Riches.Transact">Transact</option>
</select>
*/
</script>

</form>
<input type="hidden" id="hidden_col_sel" size="100" value="#($Get(tColSel))#">
<input type="hidden" id="hidden_tab_col" size="100">
<script language="Cache" runat="Server">
If ($Data(%request.Data("debug",1))) {
	Set iDebug = %request.Data("debug",1)
	If (iDebug = "RESET") Kill ^RichesDEBUG
	Set objAccount = ##class(Riches.Account).%OpenId($Get(iAccount))
	If $IsObject(objAccount) {
		Set iAccount = objAccount.Nickname
	}
	Set objAccount = ""
	Do ##class(Riches.Util).OutputDebug($Get(iAccount),$Get(iTable,iDebug))
}
Write "<table>",!
Do ##class(Riches.Account).OutputTableData()
Write "</table>",!
Write "<textarea id='debug' name='debug' rows='5' cols='150'>",!
Set tDebug = ""
Set tRow = ""
/*
For {
	If ($Data(^TESTunit) = 0) { Quit }
	Set tDebug = $Order(^TESTunit(tDebug))
	If (tDebug = "") { Quit }
	Write $Get(^TESTunit(tDebug)),!
	If ($Increment(tRow) > 4) { Quit }
}
*/
Write "</textarea>","<br>",!
//Write "<a href='/csp/sys/exp/UtilExpGlobalView.csp?$ID2=TESTunit&$NAMESPACE=",$Namespace,"'>View Debug Global</a>",!
Set q = """"
Set qClick = q_"goClickButton('PREVIEW')"_q
Set qType = q_"button"_q
Write "<button type=",qType," onclick=",qClick,">Preview</button>",!
Set qClick = q_"goClickButton('RESET')"_q
Set qType = q_"button"_q
Write "<button type=",qType," onclick=",qClick,">Reset</button>",!
</script>
<div id="div_debug" name="div_debug" style=""></div>
</body>
</html>
