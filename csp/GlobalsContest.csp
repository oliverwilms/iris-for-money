<csp:class description="Allows adhoc queries">
<html>
<head>
<script language="Cache" runat="Server">
If ($Data(%request.Data("debug",1))) {
	Set iDebug = %request.Data("debug",1)
	If (iDebug = "RESET") Kill ^RichesDEBUG
}
Set tDebugCount = $Get(^RichesDEBUG,0)
Set tDebug = 1
Set tPage = "GlobalsContest.csp"
Do:tDebug ##class(Riches.Util).DebugTEST(tPage_" - head")
//Set tHiddenColSelect = ""
Set tHeader = "iris-for-money Count"
If ($Data(%request.Data("id",1))) {
	Set id = %request.Data("id",1)
	If (id = "IMPORT") {
		Set tSC = ##class(Riches.Util).ImportCSV()
	}
	If (id = "DEBUGIMPORT") {
		Set tSC = ##class(Riches.Util).ImportDebug()
	}
	If (id = "COUNT") {
		If ($Data(%request.Data("iCount",1))) {
			Set iCount = %request.Data("iCount",1)	
		}
		Set tSC = ##class(Riches.Count).Count($Get(iCount))
	}
}

If ($Data(%request.Data("iAccount",1))) {
	Set iAccount = %request.Data("iAccount",1)
}
If ($Data(%request.Data("iTable",1))) {
	Set iTable = %request.Data("iTable",1)
	Set (tColSel,tHiddenColSelect) = ##class(Riches.Util).GetColumnListCSV(iTable)
}

If ($Data(%request.Data("iEndDate",1))) {
	Set iEndDate = %request.Data("iEndDate",1)
}
If ($Data(%request.Data("iFilter",1))) {
	Set iFilter = %request.Data("iFilter",1)
	If ($Extract(iFilter,1,1) = "^") {
		Set tYear = $Piece(iFilter,"^",2)
		Set tMonth = $Piece(iFilter,"^",3)
		Set iFilter = $Piece(iFilter,"^",4,*)
	}
}
If ($Data(%request.Data("iStartDate",1))) {
	Set iStartDate = %request.Data("iStartDate",1)
}
If ($Get(iStartDate) = ""),($Get(tYear) '= "") {
	Set iStartDate = $Get(tMonth)_"/1/"_$Get(tYear)
}
If ($Get(iEndDate) = ""),($Get(tYear) '= "") {
	If ($Get(tMonth) < 12) {
		Set tMonth = tMonth + 1
	} Else {
		Set tMonth = 1
		Set tYear = tYear + 1
	}
	Set tDate = $Get(tMonth)_"/1/"_$Get(tYear)
	Set tDateH = $ZDATEH(tDate)
	Set iEndDate = $ZDATE(tDateH - 1) 
}
Do:tDebug ##class(Riches.Util).DebugTEST("iEndDate = "_$Get(iEndDate))
Do:tDebug ##class(Riches.Util).DebugTEST("iFilter = "_$Get(iFilter))
Do:tDebug ##class(Riches.Util).DebugTEST("iStartDate = "_$Get(iStartDate))
</script>
<script language="JavaScript">
function goClickButton(id)
{
	var tPage = '#($Get(tPage,"Transact.csp"))#';
	if (id == 'IMPORT') {
		document.location = tPage + "?id=IMPORT";
		return;
	}
	if (id == 'DEBUGIMPORT') {
		document.location = tPage + "?id=DEBUGIMPORT";
		return;
	}
	if (id == 'COUNT') {
		document.location = tPage + "?id=COUNT";
		return;
	}
	if (id == 'DISPLAY') {
		document.location = "Count.csp";
		return;
	}
	if (id == 'MENU') {
		document.location = "menu.csp";
		return;
	}
	var iTable = 'null';
	var iAccount = 'null';
	if (document.getElementById("iTable") != null) {
		iTable = document.getElementById("iTable").value;
	}
	if (document.getElementById("iAccount") != null) {
		iAccount = document.getElementById("iAccount").value;
	}
	if (id == 'PREVIEW') {
		document.location = tPage + "?debug=" + id + "&iTable=" + iTable + "&iAccount=" + iAccount;	
		return;
	}
	if (id == 'RESET') {
		document.location = tPage + "?debug=" + id + "&iTable=" + iTable + "&iAccount=" + iAccount;	
		return;
	}
	var iEndDate = document.getElementById("iEndDate").value;
	var iFilter = document.getElementById("iFilter").value;
	var iStartDate = document.getElementById("iStartDate").value;
	document.location = tPage + "?&iFilter=" + iFilter + "&iEndDate=" + iEndDate + "&iStartDate=" + iStartDate;
}
function goClickHeader(row)
{
	//alert(row);
	var count = '#($Get(tDebugCount,0))#';
	var retVal = confirm("Do you want to import all rows?");
	if (retVal == true) {
		for (var row = 1; row < count; row++) {
			goClickLine(row);
		}
	}
}
function goClickLine(row)
{
	var rowId = "tr_" + row;
	var x = document.getElementById("hidden_col_sel").value;
	var arr = x.split(",");
	var len = arr.length;
	var columns = "";
	var escape = ""
	var values = "";
	for (var i = 0; i < len; i++) {
		if (arr[i] != "") {
			columns += "," + arr[i]
			x = document.getElementById("div_" + row + "_" + (i+1)).innerHTML;
			escape = x.replace(/#/g, '%23');  // fix # - end of query string marker
			escape = escape.replace(/'/g, '%27');  // fix ' - single quote
			escape = escape.replace(/\?/g, '.');  // replace q-mark with period
			escape = escape.replace(/&/g, ' ');  // replace ampersand with space
			values += ",'" + escape + "'";
		}
	}
	var table = document.getElementById("iTable").value;
	var col = columns.substring(1);  // skip leading comma
	var val = values.substring(1);  // skip leading comma
	var sql = "Insert into " + table + " (" + col + ") values (" + val + ")";
	//alert(sql);
	//var escape = sql.replace(/#/g, '%23');  // fix #
	postSQL(sql);
	document.getElementById(rowId).style.display = "none";
}
function onchangeSel(id)  // id is this of <select> for column selection
{
	var arr = id.id.split("sel_");
	var y = arr[1] - 1;  // which position changes
	var x = document.getElementById("hidden_col_sel").value;
	var arr = x.split(",");
	var len = arr.length;
	var x = document.getElementById(id.id).value;  // selected column
	arr[y] = x;
	y = arr[0];
	for (var i = 1; i < len; i++) {
		y += "," + arr[i];
	}
	document.getElementById("hidden_col_sel").value = y;  // comma delimited list of selected columns
}
function onchangeCount(id)  // id is this.value - Account, Category, or Merchant 
{
}
function onchangeTable(id)  // id is this.value - Riches.Transact
{
	//if (document.getElementById("div_col_count") == null) {
	//	var x = 0;
	//} else {
	//	var x = document.getElementById("div_col_count").innerHTML;
	//}
	//var x = document.getElementById("sel_"+2).innerHTML;  // <option ... </option>
	//alert(id);
}
function onloadHandler()
{
	document.getElementById("hidden_col_sel").value = '#($Get(tHiddenColSelect,""))#';
}
function postDebug(item, index) {
	var escape = item.replace(/\//g, '-');  // fix slashes in dates
	//var escape = encodeURI(escape);
	var escape = encodeURIComponent(escape);  // fix % and more
	if (item == '') escape = 'NULL';
	document.getElementById("div_debug").innerHTML += index + "," + escape + "<br>";
	var xhttp = new XMLHttpRequest();
	xhttp.onreadystatechange = function() {
		if (this.readyState == 4 && this.status == 200) {
			//document.getElementById("div_debug").innerHTML += this.responseText;
			document.getElementById("div_debug").innerHTML = this.responseText;
		}
		if (this.readyState == 4 && this.status != 200) {
			//document.getElementById("div_debug").innerHTML += this.responseText;
			document.getElementById("div_debug").innerHTML = this.responseText;
		}
	};
	//xhttp.open("GET", "/restapi/debug", true, "_SYSTEM", "SYS");
	//xhttp.open("POST", "/restapi/debug/" + escape + '/' + index, true);
	xhttp.open("POST", "/restapi/debug/" + escape + '/' + index, true, "_SYSTEM", "SYS");
	xhttp.send();
}
function postSQL(query)
{
	var xhttp = new XMLHttpRequest();
	xhttp.onreadystatechange = function() {
		if (this.readyState == 4 && this.status == 200) {
			document.getElementById("div_debug").innerHTML += this.responseText;
		}
	};
	//var escape = query.replace(/#/g, '%23');  // fix #
	xhttp.open("POST", "/restapi/sql/" + query, true,"_SYSTEM","SYS");
	xhttp.send();
}
function processFile(id)
{
	var delim = '\n';
	var arr = id.split(delim);
	arr.forEach(postDebug);

	//window.location = 'Account.csp?debug='+id;
	//document.getElementById("iframe_debug").src = 'Chooser.csp?iChoose=debug';
	//document.getElementById("iframe_debug").src = '';

}
function showFile(input)
{
	var file = input.files[0];
	var reader = new FileReader();
	reader.onload = function() {
		//document.getElementById('debug').value = reader.result;
		processFile(reader.result);
  	};
	reader.onerror = function() {
		document.getElementById('debug').value = reader.error;
		alert(reader.error);
	}
	reader.readAsText(file);
}
</script>
<title>#(tHeader)#</title>
</head>

<body onload="onloadHandler();">
<h1>#(tHeader)#</h1>
<form action="" method="post" enctype="multipart/form-data">
<table border="1"><tr><td>
^RichesDEBUG = #($Get(tDebugCount,0))#
</td><td>
<script language="Cache" runat="Server">
Set q = """"
Set qClick = q_"goClickButton('DEBUGIMPORT')"_q
Set qType = q_"button"_q
Write "<button type=",qType," onclick=",qClick,">Import Debug</button>",!
</script>
</td><td>
<script language="Cache" runat="Server">
Set q = """"
Set qClick = q_"goClickButton('RESET')"_q
Set qType = q_"button"_q
Write "<button type=",qType," onclick=",qClick,">Reset</button>",!
</script>
</td></tr>
<tr><td>
<script language="Cache" runat="Server">
Set tSC = ##class(Riches.Util).OutputSelectTable("iTable","iTable","Insert into table:",$Get(iTable))
</script>
</td><td>
<label for="file-uploader">CSV file:</label>
<input type="file" name="file-uploader" id="file-uploader" onchange="showFile(this)"><br>
</td><td>
<script language="Cache" runat="Server">
Set q = """"
Set qClick = q_"goClickButton('PREVIEW')"_q
Set qType = q_"button"_q
Write "<button type=",qType," onclick=",qClick,">Preview</button>",!
</script>
</td></tr>
<tr><td>

<label for="iCount">Count by:</label>

<select name="iCount" id="iCount" onchange="onchangeCount(this.value)">
  <option value="Account">Account</option>
  <option value="Category">Category</option>
  <option value="Merchant">Merchant</option>
</select>
<script language="Cache" runat="Server">
Set q = """"
Set qClick = q_"goClickButton('COUNT')"_q
Set qType = q_"button"_q
Write "<button type=",qType," onclick=",qClick,">Count</button>",!
</script>
</td><td>
</td><td>
<script language="Cache" runat="Server">
Set q = """"
Set qClick = q_"goClickButton('DISPLAY')"_q
Set qType = q_"button"_q
Write "<button type=",qType," onclick=",qClick,">Display</button>",!
</script>
</td></tr></table>
</form>
<input type="hidden" id="hidden_col_sel" size="100" value="#($Get(tColSel))#">
<label for="iStartDate">Start Date:</label>
<input type="text" id="iStartDate" size="10" value="#($Get(iStartDate))#">
<label for="iFilter">Filter:</label>
<input type="text" id="iFilter" size="20" value="#($Get(iFilter))#">
<label for="iEndDate">End Date:</label>
<input type="text" id="iEndDate" size="10" value="#($Get(iEndDate))#">
<table border=1>
<caption>Transaction Table</caption>
<script language="Cache" runat="Server">
If ($Data(%request.Data("debug",1))) {
//	Set iDebug = %request.Data("debug",1)
//	If (iDebug = "RESET") Kill ^RichesDEBUG
//	Set objAccount = ##class(Riches.Account).%OpenId($Get(iAccount))
//	If $IsObject(objAccount) {
//		Set iAccount = objAccount.Nickname
//	}
//	Set objAccount = ""
	Do ##class(Riches.Util).OutputDebug($Get(iAccount),$Get(iTable,iDebug))
}
Write "<table>",!

Set q = "'"
Set tClassname = "Riches.Transact"
Set pWhere = ""
If ($Get(iFilter) '= "") {
	Set pWhere = pWhere_" AND iFilter = "_iFilter
}
If ($Get(iStartDate) '= "") {
	//Set pWhere = pWhere_" AND TranDate >= "_q_iStartDate_q
	Set pWhere = pWhere_" AND iStartDate >= "_q_iStartDate_q
}
If ($Get(iEndDate) '= "") {
	//Set pWhere = pWhere_" AND TranDate <= "_q_iEndDate_q
	Set pWhere = pWhere_" AND iEndDate <= "_q_iEndDate_q
}
If (pWhere '= "") {
	Set pWhere = $Extract(pWhere,6,*)
}
	Set pTrClick = "javascript:tableClickHandler('#');"
	Set pMaxRows = -1
	Set tSC = $CLASSMETHOD(tClassname,"OutputTableData",pWhere,pTrClick,pMaxRows)

Write "</table>",!

</script>

<div id="div_debug" name="div_debug" style=""></div>

</body>
</html>
